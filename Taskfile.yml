version: '2'

tasks:

  deploy:
    desc: deploy
    cmds:
      - task: init
        vars:  {TFWORKDIR: "{{.TFWORKDIR}}"}
      - task: plan
        vars:  {TFWORKDIR: "{{.TFWORKDIR}}"}
      - task: apply
        vars:  {TFWORKDIR: "{{.TFWORKDIR}}"}
      - echo "terraform {{.TFWORKDIR}} deploy complete"

  init:
    desc: init
    dir: "{{.TFWORKDIR}}"
    cmds:
      - terraform init -backend-config={{.BECONF1}} -backend-config={{.BECONF2}}

  plan:
    desc: plan
    dir: "{{.TFWORKDIR}}"
    cmds:
      - terraform plan -out="{{.PLANDATE}}.tfplan" -var-file="../{{.BASEVARS}}" -var-file="../{{.OCPVARS}}" -var-file="../{{.RHNVARS}}" -var-file="{{.BECONF1}}" -var-file="{{.BECONF2}}"
    vars:
      PLANDATE: p{{now | date "2006-01-02T15.04"}} 
  
  apply:
    desc: apply
    dir: "{{.TFWORKDIR}}"
    cmds:
      - terraform apply $(../Taskfuncs planselect)

  destroy:
    desc: destroy
    dir: "{{.TFWORKDIR}}"
    cmds:
      - ../Taskfuncs verifydestruction {{.TFWORKDIR}} && terraform destroy -force  -var-file="../{{.BASEVARS}}" -var-file="../{{.OCPVARS}}" -var-file="../{{.RHNVARS}}" -var-file="{{.BECONF1}}" -var-file="{{.BECONF2}}"

  show:
    desc: show current state of terraform deployment
    dir: "{{.TFWORKDIR}}"
    cmds:
      - terraform show | less

  output:
    desc: show any outputs defined for terraform deployment
    dir: "{{.TFWORKDIR}}"
    cmds:
      - terraform output

  print-date:
    cmds:
      - echo {{now | date "2006-01-02T15.04"}}

  gensshkey:
    desc: generate ssh key pair for administering OCP cluster
    dir: ssh
    cmds:
      - ../Taskfuncs sshgenkeypair
    sources:
      - README.md
    generates:
      - ./*ecdsa-sha2-nistp521
      - ./*ecdsa-sha2-nistp521.pub
      - ./*ecdsa-sha2-nistp521.forJSON
    method: checksum